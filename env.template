# üöÇ VIEAgent ChromaDB - Railway Environment Variables Template
# Copy these to Railway Variables section

# üö® ENHANCED APPROACH: Health Check + Startup Script
# Issue Fixed: "404 errors on API endpoints - ChromaDB not fully initialized"
# Solution: Startup script waits for ChromaDB to be fully ready before accepting requests

# üîß REQUIRED VARIABLES
CHROMA_HOST=0.0.0.0
CHROMA_PORT=8000
IS_PERSISTENT=1
PERSIST_DIRECTORY=/app/data
ANONYMIZED_TELEMETRY=false
CHROMA_DB_IMPL=duckdb+parquet

# üîí SECURITY VARIABLES (Optional)
CHROMA_SERVER_CORS_ALLOW_ORIGINS=["*"]
CHROMA_SERVER_AUTHN_PROVIDER=""
CHROMA_SERVER_AUTHZ_PROVIDER=""

# üåê RAILWAY NETWORKING (Auto-set by Railway)
RAILWAY_STATIC_URL=""
RAILWAY_PRIVATE_DOMAIN=""
RAILWAY_PUBLIC_DOMAIN=""

# üìù USAGE INSTRUCTIONS:
# 1. Copy these variables to Railway Dashboard > Variables tab
# 2. Set each variable name and value
# 3. Deploy to apply changes

# üõ†Ô∏è START COMMAND OPTIONS (All use health check startup script):
# Option 1 (Dockerfile): CMD ["/app/start.sh"]
# Option 2 (Procfile): web: /app/start.sh
# Option 3 (railway.json): "startCommand": "/app/start.sh"

# üè• HEALTH CHECK CONFIGURATION:
# - Dockerfile: HEALTHCHECK with curl to /api/v1
# - railway.json: healthcheckPath: "/api/v1"
# - Startup script: Waits up to 60 seconds for ChromaDB to be ready
# - Automatic retry if health check fails

# üîç TROUBLESHOOTING:
# - Startup script ensures ChromaDB is fully initialized
# - Health checks verify API endpoints are responding
# - 60-second startup period allows for full initialization
# - Automatic restart on health check failure 