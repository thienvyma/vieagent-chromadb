# üöÇ VIEAgent ChromaDB - Railway Environment Variables Template
# Copy these to Railway Variables section

# üö® RAILWAY PATTERN: Simplified ChromaDB deployment
# Issue Fixed: "404 errors on API endpoints - Wrong deployment pattern"
# Solution: Use Railway's recommended ChromaDB deployment pattern

# üîß REQUIRED VARIABLES
CHROMA_HOST=0.0.0.0
CHROMA_PORT=8000
CHROMA_DB_IMPL=duckdb+parquet
CHROMA_API_IMPL=chromadb.api.fastapi.FastAPI
PERSIST_DIRECTORY=/chroma/data
ANONYMIZED_TELEMETRY=false

# üîí SECURITY VARIABLES (Optional)
CHROMA_SERVER_CORS_ALLOW_ORIGINS=["*"]
CHROMA_SERVER_AUTHN_PROVIDER=""
CHROMA_SERVER_AUTHZ_PROVIDER=""

# üåê RAILWAY NETWORKING (Auto-set by Railway)
RAILWAY_STATIC_URL=""
RAILWAY_PRIVATE_DOMAIN=""
RAILWAY_PUBLIC_DOMAIN=""

# üìù USAGE INSTRUCTIONS:
# 1. Copy these variables to Railway Dashboard > Variables tab
# 2. Set each variable name and value
# 3. Deploy to apply changes

# üõ†Ô∏è START COMMAND OPTIONS (Railway pattern):
# Option 1 (Dockerfile): CMD ["chroma", "run", "--host", "0.0.0.0", "--port", "8000", "--path", "/chroma/data"]
# Option 2 (Procfile): web: chroma run --host 0.0.0.0 --port 8000 --path /chroma/data
# Option 3 (railway.json): "startCommand": "chroma run --host 0.0.0.0 --port 8000 --path /chroma/data"

# üè• HEALTH CHECK CONFIGURATION:
# - Dockerfile: HEALTHCHECK with curl to /api/v1/heartbeat
# - railway.json: healthcheckPath: "/api/v1/heartbeat"
# - Railway handles port mapping automatically
# - No complex startup scripts needed

# üîç TROUBLESHOOTING:
# - Railway pattern uses /chroma/data for persistence
# - Health check endpoint: /api/v1/heartbeat
# - Railway automatically maps internal port 8000 to external domain
# - Simplified approach eliminates startup complexity 